# Generated by Django 5.2.1 on 2025-05-08 18:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(blank=True, null=True)),
                ('shift', models.CharField(blank=True, choices=[('men', 'Men'), ('women', 'Women')], max_length=10, null=True)),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('creation_time', models.TimeField(auto_now_add=True)),
                ('full_name', models.CharField(blank=True, max_length=200, null=True)),
                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('national_code', models.CharField(blank=True, max_length=20, null=True)),
                ('nidentity', models.CharField(blank=True, max_length=20, null=True)),
                ('person_image', models.ImageField(blank=True, null=True, upload_to='users/images/')),
                ('thumbnail_image', models.ImageField(blank=True, null=True, upload_to='users/thumbnails/')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('education', models.CharField(blank=True, max_length=100, null=True)),
                ('job', models.CharField(blank=True, max_length=100, null=True)),
                ('has_insurance', models.BooleanField(blank=True, null=True)),
                ('insurance_no', models.CharField(blank=True, max_length=50, null=True)),
                ('ins_start_date', models.DateField(blank=True, null=True)),
                ('ins_end_date', models.DateField(blank=True, null=True)),
                ('paddress', models.TextField(blank=True, null=True)),
                ('has_parrent', models.BooleanField(blank=True, null=True)),
                ('team_name', models.CharField(blank=True, max_length=100, null=True)),
                ('modifier', models.CharField(blank=True, max_length=100, null=True)),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('session_left', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
